version: 0.2

env:
  variables:
    TF_VERSION: "1.11.4"
    IMAGE_REPO_NAME: "ok-ecr-registry" # Replace with your ECR repository name
    IMAGE_TAG: "latest" # Replace with your desired image tag

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin $TF_VAR_ACCOUNT_ID.dkr.ecr.eu-west-1.amazonaws.com
      - echo "Pulling Terraform..."
      - cd /usr/bin
      - "curl -s -qL -o terraform.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
      - unzip -o terraform.zip

  build:
    commands:
      - echo "Initializing Terraform..."
      - cd "$CODEBUILD_SRC_DIR"
      - terraform init -no-color
      - sed -i -e "s/{{ENV}}/$TF_VAR_ENV/" backend.tf
      - terraform init -reconfigure -no-color && terraform $TF_ACTION -no-color -var-file="config/$TF_VAR_ENV.tfvars"
      - echo "Building Docker image..."
      - docker-compose -f docker-compose-dev.yml build -t ecomm-backend-api-$TF_VAR_ENV-$TF_VAR_STAGE_NAME .      
      - echo "Tagging Docker image..."
      - docker tag ecomm-backend-api-$TF_VAR_ENV-$TF_VAR_STAGE_NAME:$IMAGE_TAG $TF_VAR_ACCOUNT_ID.dkr.ecr.eu-west-1.amazonaws.com/$IMAGE_REPO_NAME:ecomm-backend-api-$TF_VAR_ENV-$TF_VAR_STAGE_NAME

  post_build:
    commands:
      - echo "Pushing Docker image to Amazon ECR..."
      - docker push $TF_VAR_ACCOUNT_ID.dkr.ecr.eu-west-1.amazonaws.com/$IMAGE_REPO_NAME:ecomm-backend-api-$TF_VAR_ENV-$TF_VAR_STAGE_NAME
      - echo "Image build and push action on $TF_VAR_ENV completed"
      - echo "terraform $TF_ACTION on $TF_VAR_ENV completed on `date`"
